Step 1: First we created index.js file in which we connected to express and listen to server.
Step 2: We made a config folder and in that we step up config.env file for environment variables.
Step 3: We exported various packages like dotenv,express,mongoose,nodemon.
Step 4: We started making routes so for this we made two separate file in which we will make route functions, so for making routes related to products => so we have "productroute.js file" in this file we just call all the functions related to working of routes, we written in another file called "productroutefunction.js".
Step 5: We make another file in which we will connect to database(mongoDB and to connect to mongoDB we use "mongoose") named as "database.js". 
Step 6: We have 5 endpoints/api for product --> to create product, to get all product, delete a product by id, update a product by id, get a product detail by id.
Step 7: We are making error handler class so that we can easily display error in less code and to use that error handler class we have to make a error middleware.
Step 8: We handled --> ifelse error, async error, Unhandled Promise Rejection, Handling Uncaught Expection, CastError.
Step 9: Now we will add features to our site like --> search, filter and pagination.
Step 10: Packages installed till now are bcyrptjs, jsonwebtoken, validator, nodemailer, cookie-parser, body-parser, cors, concurrently.
Step 11: We will make routes for user in same format as we did for product and there are 4 routes --> createuser, loginuser, logoutuser, forgot password.
Step 12: Few authenticate function to check is user is logged-in or not and to authorize roles in "auth.js" file.
Step 13: In forgot password we implemented the token to send to email for reset password.
